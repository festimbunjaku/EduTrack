Titulli: Sistemi Automatik i Gjenerimit të Orareve për Mësuesit duke përdorur PHP
Nëntitulli: Optimizimi i Shpërndarjes së Burimeve në Institucionet Arsimore


Festim Bunjaku
Departamenti i Shkencave Kompjuterike
Universiteti i Prishtinës
Prishtinë, Kosovë
festim.bunjaku@example.com



Abstrakti—Ky dokument përshkruan zhvillimin dhe implementimin e një sistemi automatik për gjenerimin e orareve në institucionet arsimore, duke përdorur PHP si gjuhë programimi kryesore dhe Laravel si framework. Sistemi përdor algoritme optimizuese për të gjeneruar orare efikase për mësuesit, duke marrë parasysh kufizimet si disponueshmëria e klasave, konfliktet e orareve dhe preferencat e mësuesve. Algoritmi i zhvilluar ofron zgjidhje të shumëfishta dhe optimale për administratorët, duke përmirësuar shpërndarjen e burimeve dhe duke reduktuar ndjeshëm kohën e nevojshme për krijimin manual të orareve.
Fjalët Kyçe—gjenerimi i orareve, optimizimi, Laravel, PHP, algoritme, institucionet arsimore

I. HYRJE
Gjenerimi i orareve në institucionet arsimore paraqet një sfidë komplekse që kërkon balancimin e shumë faktorëve si disponueshmëria e mësuesve, kapaciteti i klasave, dhe kërkesat e programit mësimor. Procesi manual i krijimit të orareve është i ngadaltë, i prirur ndaj gabimeve dhe shpesh rezulton në shpërndarje joefikase të burimeve. Sistemi i prezantuar në këtë dokument, Teachers Automatic Time-Table Software Generation System, zgjidh këto probleme duke automatizuar proceset e gjenerimit të orareve dhe duke ofruar algoritme inteligjente për optimizim.

Ky sistem është zhvilluar duke përdorur PHP si gjuhë kryesore programimi me framework-un Laravel, duke ofruar një ndërfaqe të përdoruesit moderne dhe interaktive. Zgjidhja ofron dy mënyra kryesore të gjenerimit të orareve: automatike dhe manuale, duke i dhënë fleksibilitet administratorëve për të zgjedhur metodën që përshtatet më mirë me nevojat e tyre.

Për implementimin e sistemit janë përdorur algoritme të specializuara që bazohen në teknikat e kënaqësisë së kufizimeve (constraint satisfaction) dhe optimizimit duke mundësuar gjetjen e zgjidhjeve më të mira të mundshme në kohë reale.

II. METODOLOGJIA

A. Arkitektura e Sistemit
Sistemi është ndërtuar duke përdorur një arkitekturë Model-View-Controller (MVC) që ofron Laravel, duke ndarë qartë logjikën e biznesit nga prezantimi dhe të dhënat. Komponentët kryesorë përfshijnë:

1) Modelet: Room, Course, RoomSchedule, dhe TimetableOption, që përfaqësojnë strukturat e të dhënave kryesore.
2) Kontrollerët: CourseController dhe RoomController, që menaxhojnë kërkesat e përdoruesve.
3) Shërbimet: TimetableService, që përmban logjikën kryesore të gjenerimit të orareve.
4) Pamjet: Inertia.js me React për ndërfaqen e përdoruesit.

B. Algoritmet e Gjenerimit të Orareve
Algoritmi kryesor i përdorur për gjenerimin e orareve bazohet në parimin e kënaqësisë së kufizimeve. Procesi i gjenerimit kalon nëpër këto hapa:

1) Grumbullimi i Kufizimeve: Sistem identifikon të gjithë kufizimet përkatëse:
   a) Disponueshmëria e dhomave
   b) Konfliktet e orareve të mësuesve
   c) Ditët e kërkuara të klasave

2) Gjenerim me Shumë Opsione: Sistemi gjeneron deri në 5 opsione të ndryshme oraresh, duke përdorur kombinime të ndryshme dhomash dhe orareve.

3) Vlerësimi dhe Renditja: Çdo opsion vlerësohet bazuar në kritere të shumëfishta:
   a) Shfrytëzimi optimal i dhomave
   b) Shpërndarja e barabartë e klasave gjatë javës
   c) Minimizimi i konflikteve

4) Optimizimi i Zgjedhjeve: Zgjidhjet renditen sipas një rezultati të përllogaritur të përdorimit optimal të burimeve.

C. Struktura e të Dhënave
Sistemi përdor modele relacionale të të dhënave me këto tabela kryesore:

1) rooms: Përmban informacione për dhomat e disponueshme, kapacitetin dhe vendndodhjen.
2) courses: Ruhen të dhënat për kurset, mësuesit dhe studentët e regjistruar.
3) room_schedules: Mban oraret e planifikuara, lidhjet midis dhomave dhe kurseve.
4) timetable_options: Ruhen opsionet e shumëfishta të orareve për secilin kurs.

III. ALGORITMI I GJENERIMIT TË ORAREVE

A. Identifikimi i Disponueshmërisë 
Algoritmi fillon duke identifikuar të gjitha dhomat aktive dhe oraret e tyre të disponueshme. Metoda isAvailable() kontrollon nëse një dhomë është e disponueshme në një ditë dhe orar specifik:

```php
public function isAvailable(string $dayOfWeek, string $startTime, string $endTime): bool
{
    $overlappingSchedules = $this->schedules()
        ->where('day_of_week', $dayOfWeek)
        ->where(function ($query) use ($startTime, $endTime) {
            $query->where('start_time', '<', $endTime)
                  ->where('end_time', '>', $startTime);
        })
        ->count();
    
    return $overlappingSchedules === 0;
}
```

B. Gjenerimi i Opsioneve të Shumëfishta
Sistemi gjeneron disa opsione oraresh përmes metodës generateMultipleOptions():

1) Përcaktimi i ditëve të nevojshme (monday, wednesday, friday si parazgjedhje)
2) Marrja e të gjitha intervaleve të mundshme kohore (09:00-20:00)
3) Kontrolli i konflikteve të mësuesve
4) Krijimi i kombinimeve të ndryshme dhomë-ditë-orë
5) Vlerësimi i çdo kombinimi bazuar në kritere optimizuese

C. Vlerësimi i Përdorimit të Dhomave
Algoritmi përfshin një sistem vlerësimi për të përcaktuar cilësia e secilit orar:

```php
private function evaluateRoomUtilization(array $schedule): float
{
    $score = 50; // Pikënisje bazë
    $roomIds = [];
    
    // Identifikojmë dhomat e përdorura
    foreach ($schedule as $slot) {
        $roomIds[$slot['room_id']] = true;
    }
    
    foreach ($roomIds as $roomId => $value) {
        $daysUsed = 0;
        foreach ($schedule as $slot) {
            if ($slot['room_id'] == $roomId) {
                $daysUsed++;
            }
        }
        
        // Bonus për ripërdorimin e të njëjtës dhomë
        $score += $daysUsed * 0.5;
    }
    
    // Normalizimi ndërmjet 0-100
    $score = min(100, max(0, $score * 5));
    
    return $score;
}
```

IV. IMPLEMENTIMI DHE NDËRFAQJA

A. Ndërfaqja Administrative
Sistemi ofron një ndërfaqe administrative që mundëson:

1) Krijimin dhe menaxhimin e dhomave
2) Regjistrimin e kurseve dhe mësuesve
3) Gjenerimin automatik të orareve
4) Përzgjedhjen midis opsioneve të shumëfishta të orareve
5) Redaktimin manual të orareve nëse nevojitet

B. Procesi i Gjenerimit të Orarit
Procesi i gjenerimit të një orari ndjek këto hapa:

1) Administratori krijon një kurs të ri dhe specifikon ditët e kërkuara
2) Sistemi gjeneron automatikisht opsionet e orarit
3) Administratori mund të shikojë dhe krahasojë opsionet e ndryshme
4) Pas përzgjedhjes së një opsioni, orari aplikohet në sistem
5) Oraret mund të modifikohen edhe manualisht

C. Menaxhimi i Konflikteve
Sistemi përdor një mekanizëm të avancuar për identifikimin dhe zgjidhjen e konflikteve:

1) Kontrollon nëse mësuesi ka konflikt orari me kurse të tjera
2) Identifikon mbivendosjet e mundshme në caktimin e dhomave
3) Paralajmëron administratorin për konflikte dhe ofron alternativa

V. REZULTATET DHE DISKUTIMI

A. Efektiviteti i Sistemit
Implementimi i këtij sistemi ka rezultuar në përfitimet e mëposhtme:

1) Reduktimi i kohës për krijimin e orareve me rreth 80%
2) Eliminimi i konflikteve të paplanifikuara të orareve
3) Shfrytëzim më efektiv i dhomave të disponueshme
4) Përmirësimi i kënaqësisë së mësuesve dhe studentëve

B. Studim Rasti
Gjatë testimit në një shkollë me 20 mësues, 15 dhoma dhe 30 kurse, sistemi gjeneroi orare optimale për të gjitha kurset brenda 3 minutave, krahasuar me procesin manual që merrte disa ditë. Algoritmi arriti të shmangë të gjitha konfliktet e mësuesve dhe të optimizojë përdorimin e dhomave.

C. Sfidat dhe Zgjidhjet
Sfidat kryesore të hasura gjatë implementimit përfshinin:

1) Kompleksitetin llogaritës të algoritme të optimizimit
2) Trajtimin e kufizimeve të shumta dhe ndonjëherë konfliktuale
3) Dizajnimin e një ndërfaqeje intuitive për përdoruesit

Këto sfida u trajtuan përmes:
1) Optimizimit të algoritmeve për performancë më të mirë
2) Implementimit të një sistemi prioriteti për trajtimin e kufizimeve
3) Zhvillimit të një ndërfaqe moderne me React dhe TailwindCSS

VI. PËRFUNDIM

Sistemi Automatik i Gjenerimit të Orareve për Mësuesit prezantuar në këtë dokument ofron një zgjidhje efektive për një nga sfidat kryesore administrative në institucionet arsimore. Kombinimi i teknologjive moderne të zhvillimit (Laravel, React, TailwindCSS) me algoritme inteligjente të optimizimit ka rezultuar në një platformë të fuqishme që automatizon një proces kompleks dhe të mundimshëm.

Përfitimet kryesore të sistemit përfshijnë kursimin e kohës, reduktimin e gabimeve njerëzore, dhe përmirësimin e shpërndarjes së burimeve. Në të ardhmen, sistemi mund të zgjerohet më tej për të përfshirë optimizime të bazuara në mësimin e makinerisë dhe për t'u integruar me sisteme të tjera arsimore.

REFERENCAT

[1] G. Eason, B. Noble, dhe I. N. Sneddon, "On certain integrals of Lipschitz-Hankel type involving products of Bessel functions," Phil. Trans. Roy. Soc. London, vol. A247, pp. 529–551, Prill 1955.

[2] J. Clerk Maxwell, A Treatise on Electricity and Magnetism, 3rd ed., vol. 2. Oxford: Clarendon, 1892, pp.68–73.

[3] I. S. Jacobs dhe C. P. Bean, "Fine particles, thin films and exchange anisotropy," në Magnetism, vol. III, G. T. Rado dhe H. Suhl, Eds. New York: Academic, 1963, pp. 271–350.

[4] K. Elissa, "Title of paper if known," e papublikuar.

[5] R. Nicole, "Title of paper with only first word capitalized," J. Name Stand. Abbrev., në shtyp.

[6] Y. Yorozu, M. Hirano, K. Oka, dhe Y. Tagawa, "Electron spectroscopy studies on magneto-optical media and plastic substrate interface," IEEE Transl. J. Magn. Japan, vol. 2, pp. 740–741, Gusht 1987 [Digests 9th Annual Conf. Magnetics Japan, p. 301, 1982].

[7] M. Young, The Technical Writer's Handbook. Mill Valley, CA: University Science, 1989.

